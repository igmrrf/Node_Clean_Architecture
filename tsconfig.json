{
  "compilerOptions": {
    "importHelpers": true,
    // "moduleResolution": "node16",
    // Target latest version of ECMAScript.
    "target": "ES5",
    // Don't emit; allow Babel to transform files.
    // "noEmit": true,
    // Ensure that .d.ts files are created by tsc, but not .js files
    "declaration": true,
    // "emitDeclarationOnly": true,
    // Ensure that Babel can safely transpile files in the TypeScript project
    "isolatedModules": true /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
    "lib": ["es5"],
    "module": "commonjs" /* Specify what module code is generated. */,
    "rootDir": "./src" /* Specify the root folder within your source files. */,
    "resolveJsonModule": true /* Enable importing .json files. */,

    "allowJs": true /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */,
    "outDir": "typed" /* Specify an output folder for all emitted files. */,
    "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
    "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,

    "strict": true /* Enable all strict type-checking options. */,
    "noImplicitAny": true /* Enable error reporting for expressions and declarations with an implied 'any' type. */,
    "skipLibCheck": true /* Skip type checking all .d.ts files. */,
    "allowSyntheticDefaultImports": true,
    "sourceMap": false,
    // !remove
    // "strictFunctionTypes": true,
    // "strictBindCallApply": true,
    // "moduleDetection": "auto",

    "baseUrl": "./src",

    "paths": {
      "*": ["*"],
      "app/*": ["app/*"],
      "spec/*": ["spec/*"],
      "base/*": ["base/*"],
      "test/*": ["test/*"],
      "utils/*": ["utils/*"],
      "config/*": ["config/*"],
      "domain/*": ["domain/*"],
      "modules/*": ["modules/*"],
      "helpers/*": ["helpers/*"],
      "rest/*": ["interfaces/rest/*"],
      "containers/*": ["containers/*"],
      "interfaces/*": ["interfaces/*"],
      "error/*": ["interfaces/rest/errors/*"],
      "routes/*": ["interfaces/rest/routes/*"],
      "controllers/*": ["interfaces/rest/controllers/*"],
      "validations/*": ["interfaces/rest/validations/*"],
      "middlewares/*": ["interfaces/rest/middlewares/*"]
    }
  },
  "exclude": ["node_modules", "**/node_modules/*", "dist", "doc", "client", "typed", "coverage"],
  "include": ["./src/**/*"]
}
