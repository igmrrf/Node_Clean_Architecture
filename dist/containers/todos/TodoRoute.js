"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true,
});
var tslib_1 = require("tslib");
var express_1 = require("express");
var awilix_express_1 = require("awilix-express");
var validator_module_1 = tslib_1.__importDefault(require("../../modules/validator.module"));
var checkAuthentication_1 = tslib_1.__importDefault(
  require("../../interfaces/rest/middlewares/checkAuthentication"),
);
var methodNotAllowed_1 = tslib_1.__importDefault(require("../../interfaces/rest/middlewares/methodNotAllowed"));
var TodoController_1 = tslib_1.__importDefault(require("./TodoController"));
var TodoValidation_1 = tslib_1.__importDefault(require("./TodoValidation"));
var router = (0, express_1.Router)();
var api = (0, awilix_express_1.makeInvoker)(TodoController_1.default);
var Auth = (0, awilix_express_1.makeInvoker)(checkAuthentication_1.default);
var validate = (0, awilix_express_1.makeInvoker)(TodoValidation_1.default);
/**
 * @api {post} /todo Create New Todo
 * @apiGroup Todo
 * @apiName Create new Todo
 * @apiDescription creates a new todo which automatically inherits the current date
 * @apiVersion 0.0.1
 * @apiSuccessExample Success Response:
 * {
 *
 * }
 */
/**
 * @api {patch} /todo/:id Update Todo
 * @apiGroup Todo
 * @apiName Updates existing Todo
 * @apiDescription Updates Todo
 * @apiVersion 0.0.1
 * @apiSuccessExample Success Response:
 * {
 *
 * }

 */
/**
 * @api {delete} /todo/:id Delete Todo
 * @apiGroup Todo
 * @apiName Delete Todo
 * @apiDescription Deletes a single Todo
 * @apiVersion 0.0.1
 * @apiParam {:id} Id - Todo Id
 * @apiSuccessExample Success Response:
 * {
 *
 * }
 */
/**
 * @api {get} /todo All Todo Collection Data
 * @apiGroup Todo
 * @apiName Get Todo(s)
 * @apiDescription Gets all todo
 * @apiVersion 0.0.1
 * @apiSuccessExample Success Response:
 * {
 *
 * }
 */
/**
 * @api {get} /todo/:id Get Todo
 * @apiGroup Todo
 * @apiName  Get Todo
 * @apiDescription Get a single Todo with full populated information
 * @apiVersion 0.0.1
 * @apiParam {:id} Id - Todo Id
 * @apiSuccessExample Success Response:
 * {
 *
 * }
 */
router
  .route("/")
  .get(Auth("isLoggedIn"), api("getTodos"))
  .post(validate("create"), validator_module_1.default, Auth("isLoggedIn"), api("createTodo"))
  .all(methodNotAllowed_1.default);
router
  .route("/:id")
  .delete(Auth("isLoggedIn"), api("deleteTodo"))
  .get(Auth("isLoggedIn"), api("getTodo"))
  .patch(Auth("isLoggedIn"), api("updateTodo"))
  .all(methodNotAllowed_1.default);
exports.default = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInRzbGliXzEiLCJyZXF1aXJlIiwiZXhwcmVzc18xIiwiYXdpbGl4X2V4cHJlc3NfMSIsInZhbGlkYXRvcl9tb2R1bGVfMSIsIl9faW1wb3J0RGVmYXVsdCIsImNoZWNrQXV0aGVudGljYXRpb25fMSIsIm1ldGhvZE5vdEFsbG93ZWRfMSIsIlRvZG9Db250cm9sbGVyXzEiLCJUb2RvVmFsaWRhdGlvbl8xIiwicm91dGVyIiwiUm91dGVyIiwiYXBpIiwibWFrZUludm9rZXIiLCJkZWZhdWx0IiwiQXV0aCIsInZhbGlkYXRlIiwicm91dGUiLCJnZXQiLCJwb3N0IiwiYWxsIiwiZGVsZXRlIiwicGF0Y2giXSwic291cmNlcyI6WyIuLi8uLi8uLi90eXBlZC9jb250YWluZXJzL3RvZG9zL1RvZG9Sb3V0ZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xudmFyIGV4cHJlc3NfMSA9IHJlcXVpcmUoXCJleHByZXNzXCIpO1xudmFyIGF3aWxpeF9leHByZXNzXzEgPSByZXF1aXJlKFwiYXdpbGl4LWV4cHJlc3NcIik7XG52YXIgdmFsaWRhdG9yX21vZHVsZV8xID0gdHNsaWJfMS5fX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIm1vZHVsZXMvdmFsaWRhdG9yLm1vZHVsZVwiKSk7XG52YXIgY2hlY2tBdXRoZW50aWNhdGlvbl8xID0gdHNsaWJfMS5fX2ltcG9ydERlZmF1bHQocmVxdWlyZShcImludGVyZmFjZXMvcmVzdC9taWRkbGV3YXJlcy9jaGVja0F1dGhlbnRpY2F0aW9uXCIpKTtcbnZhciBtZXRob2ROb3RBbGxvd2VkXzEgPSB0c2xpYl8xLl9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiaW50ZXJmYWNlcy9yZXN0L21pZGRsZXdhcmVzL21ldGhvZE5vdEFsbG93ZWRcIikpO1xudmFyIFRvZG9Db250cm9sbGVyXzEgPSB0c2xpYl8xLl9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9Ub2RvQ29udHJvbGxlclwiKSk7XG52YXIgVG9kb1ZhbGlkYXRpb25fMSA9IHRzbGliXzEuX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL1RvZG9WYWxpZGF0aW9uXCIpKTtcbnZhciByb3V0ZXIgPSAoMCwgZXhwcmVzc18xLlJvdXRlcikoKTtcbnZhciBhcGkgPSAoMCwgYXdpbGl4X2V4cHJlc3NfMS5tYWtlSW52b2tlcikoVG9kb0NvbnRyb2xsZXJfMS5kZWZhdWx0KTtcbnZhciBBdXRoID0gKDAsIGF3aWxpeF9leHByZXNzXzEubWFrZUludm9rZXIpKGNoZWNrQXV0aGVudGljYXRpb25fMS5kZWZhdWx0KTtcbnZhciB2YWxpZGF0ZSA9ICgwLCBhd2lsaXhfZXhwcmVzc18xLm1ha2VJbnZva2VyKShUb2RvVmFsaWRhdGlvbl8xLmRlZmF1bHQpO1xuLyoqXG4gKiBAYXBpIHtwb3N0fSAvdG9kbyBDcmVhdGUgTmV3IFRvZG9cbiAqIEBhcGlHcm91cCBUb2RvXG4gKiBAYXBpTmFtZSBDcmVhdGUgbmV3IFRvZG9cbiAqIEBhcGlEZXNjcmlwdGlvbiBjcmVhdGVzIGEgbmV3IHRvZG8gd2hpY2ggYXV0b21hdGljYWxseSBpbmhlcml0cyB0aGUgY3VycmVudCBkYXRlXG4gKiBAYXBpVmVyc2lvbiAwLjAuMVxuICogQGFwaVN1Y2Nlc3NFeGFtcGxlIFN1Y2Nlc3MgUmVzcG9uc2U6XG4gKiB7XG4gKlxuICogfVxuICovXG4vKipcbiAqIEBhcGkge3BhdGNofSAvdG9kby86aWQgVXBkYXRlIFRvZG9cbiAqIEBhcGlHcm91cCBUb2RvXG4gKiBAYXBpTmFtZSBVcGRhdGVzIGV4aXN0aW5nIFRvZG9cbiAqIEBhcGlEZXNjcmlwdGlvbiBVcGRhdGVzIFRvZG9cbiAqIEBhcGlWZXJzaW9uIDAuMC4xXG4gKiBAYXBpU3VjY2Vzc0V4YW1wbGUgU3VjY2VzcyBSZXNwb25zZTpcbiAqIHtcbiAqXG4gKiB9XG5cbiAqL1xuLyoqXG4gKiBAYXBpIHtkZWxldGV9IC90b2RvLzppZCBEZWxldGUgVG9kb1xuICogQGFwaUdyb3VwIFRvZG9cbiAqIEBhcGlOYW1lIERlbGV0ZSBUb2RvXG4gKiBAYXBpRGVzY3JpcHRpb24gRGVsZXRlcyBhIHNpbmdsZSBUb2RvXG4gKiBAYXBpVmVyc2lvbiAwLjAuMVxuICogQGFwaVBhcmFtIHs6aWR9IElkIC0gVG9kbyBJZFxuICogQGFwaVN1Y2Nlc3NFeGFtcGxlIFN1Y2Nlc3MgUmVzcG9uc2U6XG4gKiB7XG4gKlxuICogfVxuICovXG4vKipcbiAqIEBhcGkge2dldH0gL3RvZG8gQWxsIFRvZG8gQ29sbGVjdGlvbiBEYXRhXG4gKiBAYXBpR3JvdXAgVG9kb1xuICogQGFwaU5hbWUgR2V0IFRvZG8ocylcbiAqIEBhcGlEZXNjcmlwdGlvbiBHZXRzIGFsbCB0b2RvXG4gKiBAYXBpVmVyc2lvbiAwLjAuMVxuICogQGFwaVN1Y2Nlc3NFeGFtcGxlIFN1Y2Nlc3MgUmVzcG9uc2U6XG4gKiB7XG4gKlxuICogfVxuICovXG4vKipcbiAqIEBhcGkge2dldH0gL3RvZG8vOmlkIEdldCBUb2RvXG4gKiBAYXBpR3JvdXAgVG9kb1xuICogQGFwaU5hbWUgIEdldCBUb2RvXG4gKiBAYXBpRGVzY3JpcHRpb24gR2V0IGEgc2luZ2xlIFRvZG8gd2l0aCBmdWxsIHBvcHVsYXRlZCBpbmZvcm1hdGlvblxuICogQGFwaVZlcnNpb24gMC4wLjFcbiAqIEBhcGlQYXJhbSB7OmlkfSBJZCAtIFRvZG8gSWRcbiAqIEBhcGlTdWNjZXNzRXhhbXBsZSBTdWNjZXNzIFJlc3BvbnNlOlxuICoge1xuICpcbiAqIH1cbiAqL1xucm91dGVyXG4gICAgLnJvdXRlKFwiL1wiKVxuICAgIC5nZXQoQXV0aChcImlzTG9nZ2VkSW5cIiksIGFwaShcImdldFRvZG9zXCIpKVxuICAgIC5wb3N0KHZhbGlkYXRlKFwiY3JlYXRlXCIpLCB2YWxpZGF0b3JfbW9kdWxlXzEuZGVmYXVsdCwgQXV0aChcImlzTG9nZ2VkSW5cIiksIGFwaShcImNyZWF0ZVRvZG9cIikpXG4gICAgLmFsbChtZXRob2ROb3RBbGxvd2VkXzEuZGVmYXVsdCk7XG5yb3V0ZXJcbiAgICAucm91dGUoXCIvOmlkXCIpXG4gICAgLmRlbGV0ZShBdXRoKFwiaXNMb2dnZWRJblwiKSwgYXBpKFwiZGVsZXRlVG9kb1wiKSlcbiAgICAuZ2V0KEF1dGgoXCJpc0xvZ2dlZEluXCIpLCBhcGkoXCJnZXRUb2RvXCIpKVxuICAgIC5wYXRjaChBdXRoKFwiaXNMb2dnZWRJblwiKSwgYXBpKFwidXBkYXRlVG9kb1wiKSlcbiAgICAuYWxsKG1ldGhvZE5vdEFsbG93ZWRfMS5kZWZhdWx0KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHJvdXRlcjtcbiJdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWTs7QUFDWkEsTUFBTSxDQUFDQyxjQUFjLENBQUNDLE9BQU8sRUFBRSxZQUFZLEVBQUU7RUFBRUMsS0FBSyxFQUFFO0FBQUssQ0FBQyxDQUFDO0FBQzdELElBQUlDLE9BQU8sR0FBR0MsT0FBTyxDQUFDLE9BQU8sQ0FBQztBQUM5QixJQUFJQyxTQUFTLEdBQUdELE9BQU8sQ0FBQyxTQUFTLENBQUM7QUFDbEMsSUFBSUUsZ0JBQWdCLEdBQUdGLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQztBQUNoRCxJQUFJRyxrQkFBa0IsR0FBR0osT0FBTyxDQUFDSyxlQUFlLENBQUNKLE9BQU8sa0NBQTRCLENBQUM7QUFDckYsSUFBSUsscUJBQXFCLEdBQUdOLE9BQU8sQ0FBQ0ssZUFBZSxDQUFDSixPQUFPLHlEQUFtRCxDQUFDO0FBQy9HLElBQUlNLGtCQUFrQixHQUFHUCxPQUFPLENBQUNLLGVBQWUsQ0FBQ0osT0FBTyxzREFBZ0QsQ0FBQztBQUN6RyxJQUFJTyxnQkFBZ0IsR0FBR1IsT0FBTyxDQUFDSyxlQUFlLENBQUNKLE9BQU8sb0JBQW9CLENBQUM7QUFDM0UsSUFBSVEsZ0JBQWdCLEdBQUdULE9BQU8sQ0FBQ0ssZUFBZSxDQUFDSixPQUFPLG9CQUFvQixDQUFDO0FBQzNFLElBQUlTLE1BQU0sR0FBRyxDQUFDLENBQUMsRUFBRVIsU0FBUyxDQUFDUyxNQUFNLEdBQUc7QUFDcEMsSUFBSUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxFQUFFVCxnQkFBZ0IsQ0FBQ1UsV0FBVyxFQUFFTCxnQkFBZ0IsQ0FBQ00sT0FBTyxDQUFDO0FBQ3JFLElBQUlDLElBQUksR0FBRyxDQUFDLENBQUMsRUFBRVosZ0JBQWdCLENBQUNVLFdBQVcsRUFBRVAscUJBQXFCLENBQUNRLE9BQU8sQ0FBQztBQUMzRSxJQUFJRSxRQUFRLEdBQUcsQ0FBQyxDQUFDLEVBQUViLGdCQUFnQixDQUFDVSxXQUFXLEVBQUVKLGdCQUFnQixDQUFDSyxPQUFPLENBQUM7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQUosTUFBTSxDQUNETyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQ1ZDLEdBQUcsQ0FBQ0gsSUFBSSxDQUFDLFlBQVksQ0FBQyxFQUFFSCxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FDeENPLElBQUksQ0FBQ0gsUUFBUSxDQUFDLFFBQVEsQ0FBQyxFQUFFWixrQkFBa0IsQ0FBQ1UsT0FBTyxFQUFFQyxJQUFJLENBQUMsWUFBWSxDQUFDLEVBQUVILEdBQUcsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUMzRlEsR0FBRyxDQUFDYixrQkFBa0IsQ0FBQ08sT0FBTyxDQUFDO0FBQ3BDSixNQUFNLENBQ0RPLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FDYkksTUFBTSxDQUFDTixJQUFJLENBQUMsWUFBWSxDQUFDLEVBQUVILEdBQUcsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUM3Q00sR0FBRyxDQUFDSCxJQUFJLENBQUMsWUFBWSxDQUFDLEVBQUVILEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUN2Q1UsS0FBSyxDQUFDUCxJQUFJLENBQUMsWUFBWSxDQUFDLEVBQUVILEdBQUcsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUM1Q1EsR0FBRyxDQUFDYixrQkFBa0IsQ0FBQ08sT0FBTyxDQUFDO0FBQ3BDaEIsT0FBTyxDQUFDZ0IsT0FBTyxHQUFHSixNQUFNIn0=
