"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true,
});
exports.addCountryCode =
  exports.removeCountryCode =
  exports.validateBoolean =
  exports.checkIfNotGlobal =
  exports.getCronValueFromDays =
  exports.buildProjection =
  exports.capitalize =
    void 0;
var tslib_1 = require("tslib");
var logger_1 = tslib_1.__importDefault(require("../base/logger"));
var constants_1 = require("./constants");
var capitalize = function (word) {
  return word.charAt(0).toUpperCase() + word.slice(1);
};
exports.capitalize = capitalize;
var buildProjection = function (projections) {
  var arrayProjection = projections.split(",");
  var select = {};
  arrayProjection.forEach(function (projection) {
    if (typeof projection === "string") {
      select[projection] = 1;
    } else {
      (0, logger_1.default)("Skiping...", projection);
    }
  });
  return select;
};
exports.buildProjection = buildProjection;
var getCronValueFromDays = function (daysList) {
  var days = daysList;
  var daysCount = days.length;
  var value = "";
  while (daysCount) {
    if (value) {
      value += ",";
    }
    switch (days[daysCount - 1]) {
      case "Mon":
        days[daysCount - 1] = 1;
        break;
      case "Tue":
        days[daysCount - 1] = 2;
        break;
      case "Wed":
        days[daysCount - 1] = 3;
        break;
      case "Thu":
        days[daysCount - 1] = 4;
        break;
      case "Fri":
        days[daysCount - 1] = 5;
        break;
      case "Sat":
        days[daysCount - 1] = 6;
        break;
      case "Sun":
        days[daysCount - 1] = 0;
        break;
      default:
        days[daysCount - 1] = "";
        break;
    }
    value += days[daysCount - 1];
    daysCount -= 1;
  }
  return value;
};
exports.getCronValueFromDays = getCronValueFromDays;
/**
 *
 * @param {String} collection
 * @param {String} splitName
 */
var checkIfNotGlobal = function (collection, splitName) {
  if (
    tslib_1
      .__spreadArray(tslib_1.__spreadArray([], constants_1.globalModels, true), [collection], false)
      .includes(splitName)
  ) {
    return false;
  }
  return true;
};
exports.checkIfNotGlobal = checkIfNotGlobal;
/**
 *
 * @param {object} data
 * @param {string} name
 * @returns
 */
var validateBoolean = function (data, name) {
  var isEnabledPresent = name in data;
  if (!isEnabledPresent) {
    return {
      message: "".concat(name, " is required"),
      valid: false,
    };
  }
  var enabled = data[name];
  if (typeof enabled !== "boolean") {
    return {
      message: "".concat(name, " must be a boolean"),
      valid: false,
    };
  }
  return {
    message: "success",
    valid: true,
  };
};
exports.validateBoolean = validateBoolean;
var removeCountryCode = function (numbers) {
  var cleaned = numbers.map(function (each) {
    return constants_1.countryCodes.includes(each.toString().substring(0, 3))
      ? "0".concat(each.toString().slice(3))
      : each;
  });
  return cleaned;
};
exports.removeCountryCode = removeCountryCode;
/**
 *
 * @param {Array} numbers
 * @param {string} countryCode
 */
var addCountryCode = function (numbers, countryCode) {
  var cleaned = numbers.map(function (each) {
    if (each.toString().substring(0, 3) === countryCode) {
      return each.toString();
    }
    if (each.toString().charAt(0) === "0") {
      return "234".concat(each.toString().slice(1));
    }
    return "".concat(countryCode).concat(each.toString());
  });
  return cleaned;
};
exports.addCountryCode = addCountryCode;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImFkZENvdW50cnlDb2RlIiwicmVtb3ZlQ291bnRyeUNvZGUiLCJ2YWxpZGF0ZUJvb2xlYW4iLCJjaGVja0lmTm90R2xvYmFsIiwiZ2V0Q3JvblZhbHVlRnJvbURheXMiLCJidWlsZFByb2plY3Rpb24iLCJjYXBpdGFsaXplIiwidHNsaWJfMSIsInJlcXVpcmUiLCJsb2dnZXJfMSIsIl9faW1wb3J0RGVmYXVsdCIsImNvbnN0YW50c18xIiwid29yZCIsImNoYXJBdCIsInRvVXBwZXJDYXNlIiwic2xpY2UiLCJwcm9qZWN0aW9ucyIsImFycmF5UHJvamVjdGlvbiIsInNwbGl0Iiwic2VsZWN0IiwiZm9yRWFjaCIsInByb2plY3Rpb24iLCJkZWZhdWx0IiwiZGF5c0xpc3QiLCJkYXlzIiwiZGF5c0NvdW50IiwibGVuZ3RoIiwiY29sbGVjdGlvbiIsInNwbGl0TmFtZSIsIl9fc3ByZWFkQXJyYXkiLCJnbG9iYWxNb2RlbHMiLCJpbmNsdWRlcyIsImRhdGEiLCJuYW1lIiwiaXNFbmFibGVkUHJlc2VudCIsIm1lc3NhZ2UiLCJjb25jYXQiLCJ2YWxpZCIsImVuYWJsZWQiLCJudW1iZXJzIiwiY2xlYW5lZCIsIm1hcCIsImVhY2giLCJjb3VudHJ5Q29kZXMiLCJ0b1N0cmluZyIsInN1YnN0cmluZyIsImNvdW50cnlDb2RlIl0sInNvdXJjZXMiOlsiLi4vLi4vdHlwZWQvaGVscGVycy9mdW5jdGlvbnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmFkZENvdW50cnlDb2RlID0gZXhwb3J0cy5yZW1vdmVDb3VudHJ5Q29kZSA9IGV4cG9ydHMudmFsaWRhdGVCb29sZWFuID0gZXhwb3J0cy5jaGVja0lmTm90R2xvYmFsID0gZXhwb3J0cy5nZXRDcm9uVmFsdWVGcm9tRGF5cyA9IGV4cG9ydHMuYnVpbGRQcm9qZWN0aW9uID0gZXhwb3J0cy5jYXBpdGFsaXplID0gdm9pZCAwO1xudmFyIHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG52YXIgbG9nZ2VyXzEgPSB0c2xpYl8xLl9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiYmFzZS9sb2dnZXJcIikpO1xudmFyIGNvbnN0YW50c18xID0gcmVxdWlyZShcImhlbHBlcnMvY29uc3RhbnRzXCIpO1xudmFyIGNhcGl0YWxpemUgPSBmdW5jdGlvbiAod29yZCkgeyByZXR1cm4gd29yZC5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHdvcmQuc2xpY2UoMSk7IH07XG5leHBvcnRzLmNhcGl0YWxpemUgPSBjYXBpdGFsaXplO1xudmFyIGJ1aWxkUHJvamVjdGlvbiA9IGZ1bmN0aW9uIChwcm9qZWN0aW9ucykge1xuICAgIHZhciBhcnJheVByb2plY3Rpb24gPSBwcm9qZWN0aW9ucy5zcGxpdChcIixcIik7XG4gICAgdmFyIHNlbGVjdCA9IHt9O1xuICAgIGFycmF5UHJvamVjdGlvbi5mb3JFYWNoKGZ1bmN0aW9uIChwcm9qZWN0aW9uKSB7XG4gICAgICAgIGlmICh0eXBlb2YgcHJvamVjdGlvbiA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgc2VsZWN0W3Byb2plY3Rpb25dID0gMTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICgwLCBsb2dnZXJfMS5kZWZhdWx0KShcIlNraXBpbmcuLi5cIiwgcHJvamVjdGlvbik7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gc2VsZWN0O1xufTtcbmV4cG9ydHMuYnVpbGRQcm9qZWN0aW9uID0gYnVpbGRQcm9qZWN0aW9uO1xudmFyIGdldENyb25WYWx1ZUZyb21EYXlzID0gZnVuY3Rpb24gKGRheXNMaXN0KSB7XG4gICAgdmFyIGRheXMgPSBkYXlzTGlzdDtcbiAgICB2YXIgZGF5c0NvdW50ID0gZGF5cy5sZW5ndGg7XG4gICAgdmFyIHZhbHVlID0gXCJcIjtcbiAgICB3aGlsZSAoZGF5c0NvdW50KSB7XG4gICAgICAgIGlmICh2YWx1ZSkge1xuICAgICAgICAgICAgdmFsdWUgKz0gXCIsXCI7XG4gICAgICAgIH1cbiAgICAgICAgc3dpdGNoIChkYXlzW2RheXNDb3VudCAtIDFdKSB7XG4gICAgICAgICAgICBjYXNlIFwiTW9uXCI6XG4gICAgICAgICAgICAgICAgZGF5c1tkYXlzQ291bnQgLSAxXSA9IDE7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwiVHVlXCI6XG4gICAgICAgICAgICAgICAgZGF5c1tkYXlzQ291bnQgLSAxXSA9IDI7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwiV2VkXCI6XG4gICAgICAgICAgICAgICAgZGF5c1tkYXlzQ291bnQgLSAxXSA9IDM7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwiVGh1XCI6XG4gICAgICAgICAgICAgICAgZGF5c1tkYXlzQ291bnQgLSAxXSA9IDQ7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwiRnJpXCI6XG4gICAgICAgICAgICAgICAgZGF5c1tkYXlzQ291bnQgLSAxXSA9IDU7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwiU2F0XCI6XG4gICAgICAgICAgICAgICAgZGF5c1tkYXlzQ291bnQgLSAxXSA9IDY7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwiU3VuXCI6XG4gICAgICAgICAgICAgICAgZGF5c1tkYXlzQ291bnQgLSAxXSA9IDA7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIGRheXNbZGF5c0NvdW50IC0gMV0gPSBcIlwiO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIHZhbHVlICs9IGRheXNbZGF5c0NvdW50IC0gMV07XG4gICAgICAgIGRheXNDb3VudCAtPSAxO1xuICAgIH1cbiAgICByZXR1cm4gdmFsdWU7XG59O1xuZXhwb3J0cy5nZXRDcm9uVmFsdWVGcm9tRGF5cyA9IGdldENyb25WYWx1ZUZyb21EYXlzO1xuLyoqXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGNvbGxlY3Rpb25cbiAqIEBwYXJhbSB7U3RyaW5nfSBzcGxpdE5hbWVcbiAqL1xudmFyIGNoZWNrSWZOb3RHbG9iYWwgPSBmdW5jdGlvbiAoY29sbGVjdGlvbiwgc3BsaXROYW1lKSB7XG4gICAgaWYgKHRzbGliXzEuX19zcHJlYWRBcnJheSh0c2xpYl8xLl9fc3ByZWFkQXJyYXkoW10sIGNvbnN0YW50c18xLmdsb2JhbE1vZGVscywgdHJ1ZSksIFtjb2xsZWN0aW9uXSwgZmFsc2UpLmluY2x1ZGVzKHNwbGl0TmFtZSkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn07XG5leHBvcnRzLmNoZWNrSWZOb3RHbG9iYWwgPSBjaGVja0lmTm90R2xvYmFsO1xuLyoqXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IGRhdGFcbiAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lXG4gKiBAcmV0dXJuc1xuICovXG52YXIgdmFsaWRhdGVCb29sZWFuID0gZnVuY3Rpb24gKGRhdGEsIG5hbWUpIHtcbiAgICB2YXIgaXNFbmFibGVkUHJlc2VudCA9IG5hbWUgaW4gZGF0YTtcbiAgICBpZiAoIWlzRW5hYmxlZFByZXNlbnQpIHtcbiAgICAgICAgcmV0dXJuIHsgbWVzc2FnZTogXCJcIi5jb25jYXQobmFtZSwgXCIgaXMgcmVxdWlyZWRcIiksIHZhbGlkOiBmYWxzZSB9O1xuICAgIH1cbiAgICB2YXIgZW5hYmxlZCA9IGRhdGFbbmFtZV07XG4gICAgaWYgKHR5cGVvZiBlbmFibGVkICE9PSBcImJvb2xlYW5cIikge1xuICAgICAgICByZXR1cm4geyBtZXNzYWdlOiBcIlwiLmNvbmNhdChuYW1lLCBcIiBtdXN0IGJlIGEgYm9vbGVhblwiKSwgdmFsaWQ6IGZhbHNlIH07XG4gICAgfVxuICAgIHJldHVybiB7IG1lc3NhZ2U6IFwic3VjY2Vzc1wiLCB2YWxpZDogdHJ1ZSB9O1xufTtcbmV4cG9ydHMudmFsaWRhdGVCb29sZWFuID0gdmFsaWRhdGVCb29sZWFuO1xudmFyIHJlbW92ZUNvdW50cnlDb2RlID0gZnVuY3Rpb24gKG51bWJlcnMpIHtcbiAgICB2YXIgY2xlYW5lZCA9IG51bWJlcnMubWFwKGZ1bmN0aW9uIChlYWNoKSB7XG4gICAgICAgIHJldHVybiBjb25zdGFudHNfMS5jb3VudHJ5Q29kZXMuaW5jbHVkZXMoZWFjaC50b1N0cmluZygpLnN1YnN0cmluZygwLCAzKSkgPyBcIjBcIi5jb25jYXQoZWFjaC50b1N0cmluZygpLnNsaWNlKDMpKSA6IGVhY2g7XG4gICAgfSk7XG4gICAgcmV0dXJuIGNsZWFuZWQ7XG59O1xuZXhwb3J0cy5yZW1vdmVDb3VudHJ5Q29kZSA9IHJlbW92ZUNvdW50cnlDb2RlO1xuLyoqXG4gKlxuICogQHBhcmFtIHtBcnJheX0gbnVtYmVyc1xuICogQHBhcmFtIHtzdHJpbmd9IGNvdW50cnlDb2RlXG4gKi9cbnZhciBhZGRDb3VudHJ5Q29kZSA9IGZ1bmN0aW9uIChudW1iZXJzLCBjb3VudHJ5Q29kZSkge1xuICAgIHZhciBjbGVhbmVkID0gbnVtYmVycy5tYXAoZnVuY3Rpb24gKGVhY2gpIHtcbiAgICAgICAgaWYgKGVhY2gudG9TdHJpbmcoKS5zdWJzdHJpbmcoMCwgMykgPT09IGNvdW50cnlDb2RlKSB7XG4gICAgICAgICAgICByZXR1cm4gZWFjaC50b1N0cmluZygpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChlYWNoLnRvU3RyaW5nKCkuY2hhckF0KDApID09PSBcIjBcIikge1xuICAgICAgICAgICAgcmV0dXJuIFwiMjM0XCIuY29uY2F0KGVhY2gudG9TdHJpbmcoKS5zbGljZSgxKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFwiXCIuY29uY2F0KGNvdW50cnlDb2RlKS5jb25jYXQoZWFjaC50b1N0cmluZygpKTtcbiAgICB9KTtcbiAgICByZXR1cm4gY2xlYW5lZDtcbn07XG5leHBvcnRzLmFkZENvdW50cnlDb2RlID0gYWRkQ291bnRyeUNvZGU7XG4iXSwibWFwcGluZ3MiOiJBQUFBLFlBQVk7O0FBQ1pBLE1BQU0sQ0FBQ0MsY0FBYyxDQUFDQyxPQUFPLEVBQUUsWUFBWSxFQUFFO0VBQUVDLEtBQUssRUFBRTtBQUFLLENBQUMsQ0FBQztBQUM3REQsT0FBTyxDQUFDRSxjQUFjLEdBQUdGLE9BQU8sQ0FBQ0csaUJBQWlCLEdBQUdILE9BQU8sQ0FBQ0ksZUFBZSxHQUFHSixPQUFPLENBQUNLLGdCQUFnQixHQUFHTCxPQUFPLENBQUNNLG9CQUFvQixHQUFHTixPQUFPLENBQUNPLGVBQWUsR0FBR1AsT0FBTyxDQUFDUSxVQUFVLEdBQUcsS0FBSyxDQUFDO0FBQzlMLElBQUlDLE9BQU8sR0FBR0MsT0FBTyxDQUFDLE9BQU8sQ0FBQztBQUM5QixJQUFJQyxRQUFRLEdBQUdGLE9BQU8sQ0FBQ0csZUFBZSxDQUFDRixPQUFPLGtCQUFlLENBQUM7QUFDOUQsSUFBSUcsV0FBVyxHQUFHSCxPQUFPLGVBQXFCO0FBQzlDLElBQUlGLFVBQVUsR0FBRyxVQUFVTSxJQUFJLEVBQUU7RUFBRSxPQUFPQSxJQUFJLENBQUNDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQ0MsV0FBVyxFQUFFLEdBQUdGLElBQUksQ0FBQ0csS0FBSyxDQUFDLENBQUMsQ0FBQztBQUFFLENBQUM7QUFDekZqQixPQUFPLENBQUNRLFVBQVUsR0FBR0EsVUFBVTtBQUMvQixJQUFJRCxlQUFlLEdBQUcsVUFBVVcsV0FBVyxFQUFFO0VBQ3pDLElBQUlDLGVBQWUsR0FBR0QsV0FBVyxDQUFDRSxLQUFLLENBQUMsR0FBRyxDQUFDO0VBQzVDLElBQUlDLE1BQU0sR0FBRyxDQUFDLENBQUM7RUFDZkYsZUFBZSxDQUFDRyxPQUFPLENBQUMsVUFBVUMsVUFB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
